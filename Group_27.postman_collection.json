{
	"info": {
		"_postman_id": "0c61bc13-7ab4-4c22-ae6a-b61b44e6ce30",
		"name": "Group_27",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Lesson Van",
			"item": [
				{
					"name": "Задания по Postman_1",
					"item": [
						{
							"name": "Get",
							"item": [
								{
									"name": "HW_1",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://162.55.220.72:5005/get_method?name=str&age=int",
											"protocol": "http",
											"host": [
												"162",
												"55",
												"220",
												"72"
											],
											"port": "5005",
											"path": [
												"get_method"
											],
											"query": [
												{
													"key": "name",
													"value": "str"
												},
												{
													"key": "age",
													"value": "int"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "EP_3",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://162.55.220.72:5005/object_info_1?name=Anton&age=26&weight=180",
											"protocol": "http",
											"host": [
												"162",
												"55",
												"220",
												"72"
											],
											"port": "5005",
											"path": [
												"object_info_1"
											],
											"query": [
												{
													"key": "name",
													"value": "Anton"
												},
												{
													"key": "age",
													"value": "26"
												},
												{
													"key": "weight",
													"value": "180"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "EP_4",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://162.55.220.72:5005/object_info_2?name=Anton&age=26&salary=1500",
											"protocol": "http",
											"host": [
												"162",
												"55",
												"220",
												"72"
											],
											"port": "5005",
											"path": [
												"object_info_2"
											],
											"query": [
												{
													"key": "name",
													"value": "Anton"
												},
												{
													"key": "age",
													"value": "26"
												},
												{
													"key": "salary",
													"value": "1500"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "EP_5",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://162.55.220.72:5005/object_info_3?name=Anton&age=26&salary=100",
											"protocol": "http",
											"host": [
												"162",
												"55",
												"220",
												"72"
											],
											"port": "5005",
											"path": [
												"object_info_3"
											],
											"query": [
												{
													"key": "name",
													"value": "Anton"
												},
												{
													"key": "age",
													"value": "26"
												},
												{
													"key": "salary",
													"value": "100"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "EP_6",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://162.55.220.72:5005/object_info_4?name=Anton&age=26&salary=333",
											"protocol": "http",
											"host": [
												"162",
												"55",
												"220",
												"72"
											],
											"port": "5005",
											"path": [
												"object_info_4"
											],
											"query": [
												{
													"key": "name",
													"value": "Anton"
												},
												{
													"key": "age",
													"value": "26"
												},
												{
													"key": "salary",
													"value": "333"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Post",
							"item": [
								{
									"name": "EP_2",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "name",
												"value": "str",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "name",
													"value": "Anton",
													"type": "text"
												},
												{
													"key": "age",
													"value": "26",
													"type": "text"
												},
												{
													"key": "salary",
													"value": "1500",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "http://162.55.220.72:5005/user_info_3",
											"protocol": "http",
											"host": [
												"162",
												"55",
												"220",
												"72"
											],
											"port": "5005",
											"path": [
												"user_info_3"
											]
										}
									},
									"response": []
								},
								{
									"name": "EP_7",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "name",
													"value": "Anton",
													"type": "text"
												},
												{
													"key": "age",
													"value": "26",
													"type": "text"
												},
												{
													"key": "salary",
													"value": "999",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "http://162.55.220.72:5005 /user_info_2",
											"protocol": "http",
											"host": [
												"162",
												"55",
												"220",
												"72"
											],
											"port": "5005 ",
											"path": [
												"user_info_2"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "Задания по Postman_2",
					"item": [
						{
							"name": "New Request",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Yelka 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"string_you_want_to_search\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://162.55.220.72:5005/get_method?name=Salvador&age=24",
									"protocol": "http",
									"host": [
										"162",
										"55",
										"220",
										"72"
									],
									"port": "5005",
									"path": [
										"get_method"
									],
									"query": [
										{
											"key": "name",
											"value": "Salvador"
										},
										{
											"key": "age",
											"value": "24"
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Lesson two",
			"item": [
				{
					"name": "Practic",
					"item": [
						{
							"name": "New Request",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"var respData = pm.response.json();",
											"var reqData = request.data;",
											"",
											"let req_salary = +reqData.salary",
											"let req_u_age = +reqData.age",
											"let req_qa_salary_after_6_months = +respData.qa_salary_after_6_months",
											"",
											"//console.log(\"start_qa_salary = \" + respData.start_qa_salary)",
											"console.log(typeof(req_salary) + \" == \" + req_qa_salary_after_6_months)",
											"",
											"pm.test(\"start_qa_salary\", function () {",
											"    pm.expect(respData.start_qa_salary).to.eql(req_salary);",
											"});",
											"pm.test(\"u_age\", function () {",
											"    pm.expect(respData.person.u_age).to.eql(req_u_age);",
											"});",
											"pm.test(\"u_name\", function () {",
											"    pm.expect(respData.person.u_name [1]).to.eql(req_salary);",
											"});",
											"",
											"pm.environment.set(\"salary\", req_qa_salary_after_6_months);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "name",
											"value": "Anton",
											"type": "text"
										},
										{
											"key": "age",
											"value": "26",
											"type": "text"
										},
										{
											"key": "salary",
											"value": "35000",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "http://162.55.220.72:5005/user_info_2",
									"protocol": "http",
									"host": [
										"162",
										"55",
										"220",
										"72"
									],
									"port": "5005",
									"path": [
										"user_info_2"
									]
								}
							},
							"response": []
						},
						{
							"name": "User_info_2",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "",
										"variables": ""
									}
								},
								"url": {
									"raw": "{{URL}}/user_info_3",
									"host": [
										"{{URL}}"
									],
									"path": [
										"user_info_3"
									]
								}
							},
							"response": []
						},
						{
							"name": "New Request",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"This is the first responce from server!\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://162.55.220.72:5005/first",
									"protocol": "http",
									"host": [
										"162",
										"55",
										"220",
										"72"
									],
									"port": "5005",
									"path": [
										"first"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "1_test",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "http://162.55.220.72:5005/first",
							"protocol": "http",
							"host": [
								"162",
								"55",
								"220",
								"72"
							],
							"port": "5005",
							"path": [
								"first"
							]
						}
					},
					"response": []
				},
				{
					"name": "two_test_New",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () { ",
									"    pm.response.to.have.status(200);     // 2. Статус код 200 ",
									"}); ",
									" ",
									"let testBody = pm.response.json();//Спарсить response body в json. ",
									" ",
									"pm.test(\"Your test name\", function () {   ",
									"    pm.expect(testBody.name).to.eql(\"AntonEnot\"); //Проверить, что name в ответе равно name s request (name вбить руками.) ",
									"}); ",
									" ",
									" pm.test(\"Your test age\", function () {   ",
									"    pm.expect(testBody.age).to.eql(\"30\"); //Проверить, что age в ответе равно age s request (age вбить руками.) ",
									"}); ",
									" ",
									"pm.test(\"Your test salary\", function () {   ",
									"    pm.expect(testBody.salary).to.eql(5000); //Проверить, что salary в ответе равно salary s request (salary вбить руками.) ",
									"}); ",
									" ",
									" ",
									" ",
									"let reqBody_test = request.data; // 7. Спарсить request. ",
									"console.log(reqBody_test) // проверка ",
									"let req_name = reqBody_test.name  // Спарсить request(name) ",
									"let req_salary = +reqBody_test.salary // Спарсить request(salary) ",
									"let req_u_age = reqBody_test.age // Спарсить request(age) ",
									" ",
									"pm.test(\"Name\", function () {   ",
									"    pm.expect(testBody.name).to.eql(req_name); //8. Проверить, что name в ответе равно name s request (name забрать из request. ",
									"}); ",
									" ",
									"pm.test(\"Age\", function () {   ",
									"    pm.expect(testBody.age).to.eql(req_u_age); //Проверить, что age в ответе равно age s request (age забрать из request.) ",
									"}); ",
									" ",
									"pm.test(\"Salary\", function () {   ",
									"    pm.expect(testBody.salary).to.eql(req_salary); //10.Проверить, что salary в ответе равно salary s request (salary забрать из request.) ",
									"}); ",
									"console.log(\"family = \" + testBody.family.children) //11. Вывести в консоль параметр family из response. ",
									" ",
									"console.log( testBody.family.u_salary_1_5_year + \"==\" + (reqBody_test.salary)*4) //12.Проверить что u_salary_1_5_year в ответе равно salary*4 (salary забрать из request)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "AntonEnot",
									"type": "text"
								},
								{
									"key": "age",
									"value": "30",
									"type": "text"
								},
								{
									"key": "salary",
									"value": "5000",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://162.55.220.72:5005/user_info_3",
							"protocol": "http",
							"host": [
								"162",
								"55",
								"220",
								"72"
							],
							"port": "5005",
							"path": [
								"user_info_3"
							]
						}
					},
					"response": []
				},
				{
					"name": "Theree_test",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//. Отправить запрос.",
									"//2. Статус код 200",
									"",
									"let resp_test_Body = pm.response.json(); //3. Спарсить response body в json.",
									"",
									"let reqB_test = request.data;  //4. Спарсить request.",
									"//console.log(reqB_test); // проверка",
									"",
									"let req_name  = reqB_test.name;",
									"let req_age = reqB_test.age;",
									"let req_salary = reqB_test.salary;",
									"",
									"",
									"pm.test(\"Name\", function () {   ",
									"    pm.expect(reqB_test.name).to.eql(req_name);     //5. Проверить, что name в ответе равно name s request (name забрать из request.)",
									"}); ",
									"",
									"pm.test(\"Age\", function () {   ",
									"    pm.expect(reqB_test.age).to.eql(req_age);       //6. Проверить, что age в ответе равно age s request (age забрать из request.)",
									"}); ",
									"",
									"pm.test(\"Salary\", function () {   ",
									"    pm.expect(reqB_test.salary).to.eql(req_salary); //7. Проверить, что salary в ответе равно salary s request (salary забрать из request.)",
									"}); ",
									"",
									"console.log(resp_test_Body.family)                                   //8. Вывести в консоль параметр family из response.",
									"",
									"pm.expect(resp_test_Body.family.pets.dog).to.have.any.keys(\"name\");  //9. Проверить, что у параметра dog есть параметры name.",
									"",
									"pm.expect(resp_test_Body.family.pets.dog).to.have.any.keys(\"age\");   //10. Проверить, что у параметра dog есть параметры age.",
									"pm.expect(resp_test_Body.family.pets.dog.name).to.eql(\"Luky\");       //11. Проверить, что параметр name имеет значение Luky.",
									"",
									"pm.expect(resp_test_Body.family.pets.dog.age).to.eql(4);             //12.Проверить, что параметр age имеет значение 4.",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "AntonKotEnot",
									"type": "text"
								},
								{
									"key": "age",
									"value": "30",
									"type": "text"
								},
								{
									"key": "salary",
									"value": "5000",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://162.55.220.72:5005/object_info_3?name=AntonKotEnot&age=30&salary=5000",
							"protocol": "http",
							"host": [
								"162",
								"55",
								"220",
								"72"
							],
							"port": "5005",
							"path": [
								"object_info_3"
							],
							"query": [
								{
									"key": "name",
									"value": "AntonKotEnot"
								},
								{
									"key": "age",
									"value": "30"
								},
								{
									"key": "salary",
									"value": "5000"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "For_test",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//1. Отправить запрос.",
									"//2. Статус код 200",
									"   ",
									"    let resp_test_Body = pm.response.json();  //Спарсить response body в json.",
									"    let reqie_testik = request.data; //4. Спарсить request.",
									"    // console.log(resp_test_Body);  // проверка",
									"    let request_name = reqie_testik.name; // спарсил  имя",
									"    let request_age = reqie_testik.age;  // спарсил возвраст",
									"    ",
									"    ",
									"",
									" pm.test(\"Name\", function () {",
									"     pm.expect(reqie_testik.name).to.eql(request_name); // Проверить, что name в ответе равно name s request (name забрать из request.)",
									" })",
									"",
									"",
									" pm.test(\"Age\", function () {",
									"     pm.expect(reqie_testik.age).to.eql(request_age);",
									" })"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "http://162.55.220.72:5005/object_info_4?name=Anton&age=30&salary=333",
							"protocol": "http",
							"host": [
								"162",
								"55",
								"220",
								"72"
							],
							"port": "5005",
							"path": [
								"object_info_4"
							],
							"query": [
								{
									"key": "name",
									"value": "Anton"
								},
								{
									"key": "age",
									"value": "30"
								},
								{
									"key": "salary",
									"value": "333"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Five_test",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "AntonEnot",
									"type": "text"
								},
								{
									"key": "age",
									"value": "30",
									"type": "text"
								},
								{
									"key": "salary",
									"value": "5555",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://162.55.220.72:5005/user_info_2",
							"protocol": "http",
							"host": [
								"162",
								"55",
								"220",
								"72"
							],
							"port": "5005",
							"path": [
								"user_info_2"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						]
					}
				}
			]
		}
	]
}